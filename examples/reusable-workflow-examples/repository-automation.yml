---
name: Complete Repository Automation
# This workflow uses the GitHub Action from thenets/repo-automation
# No need to copy any source files - everything is consumed remotely!

on:
  # Fork compatibility via workflow_run (triggered by repository-automation-trigger.yml)
  workflow_run:
    workflows: ["Repository Automation: Trigger"]
    types: [completed]
  
  # Scheduled events for stale detection
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  
  # Manual trigger for testing
  workflow_dispatch:
    inputs:
      pr-number:
        description: 'PR number to process (optional)'
        required: false
        type: string
      dry-run:
        description: 'Dry run mode (true/false)'
        required: false
        default: 'false'

permissions:
  issues: write
  pull-requests: write
  checks: write

jobs:
  automation:
    runs-on: ubuntu-latest
    # IMPORTANT: Update this to match your repository
    if: github.repository == 'your-org/your-repo'
    
    steps:
      - name: Download Artifact (if workflow_run)
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
          name: pr-metadata
          path: ./pr-metadata

      - name: Repository Automation
        uses: thenets/repo-automation@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          custom-github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          dry-run: ${{ github.event.inputs.dry-run || 'false' }}
          
          # Configure your automation features
          accepted-releases: '["1.0", "1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "2.0", "2.1", "2.2", "devel", "main"]'
          accepted-backports: '["1.0", "1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "2.0", "2.1", "2.2", "main"]'
          enable-feature-branch: true
          stale-days: 1  # Mark PRs as stale after 1 day of inactivity

# That's it! The GitHub Action handles:
# - All triage automation logic  
# - Label management (triage, release, backport, feature-branch, stale)
# - Fork compatibility with artifact download
# - Error handling and reporting
# - Automatic updates when thenets/repo-automation is updated