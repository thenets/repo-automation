---
name: "Keeper: triage label protection"

'on':
  issues:
    types: [labeled, unlabeled]
  pull_request:
    types: [labeled, unlabeled]

permissions:
  issues: write
  pull-requests: write

jobs:
  protect-triage-label:
    runs-on: ubuntu-latest

    # CHANGE THIS: set your repo name here
    # this is used to prevent the workflow from running on other repos/forks
    if: github.repository == 'thenets/repo-automations'
    
    steps:
      - name: Protect triage label on issue
        if: github.event_name == 'issues' && github.event.action == 'unlabeled' && github.event.label.name == 'triage'
        uses: actions/github-script@v7
        with:
          script: |
            try {
              // Get all labels on the issue
              const { data: labels } = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number
              });
              
              // Check if any release or backport labels exist
              const hasReleaseLabel = labels.some(label => 
                label.name.startsWith('release '));
              const hasBackportLabel = labels.some(label => 
                label.name.startsWith('backport '));
              
              // If no release or backport labels, re-add triage label
              if (!hasReleaseLabel && !hasBackportLabel) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  labels: ['triage']
                });
                console.log('Re-added triage label to issue #' + 
                  context.issue.number + ' (no release/backport labels found)');
              } else {
                console.log('Triage label removal allowed for issue #' + 
                  context.issue.number + ' (release/backport labels present)');
              }
            } catch (error) {
              console.error('Error protecting triage label on issue:', error);
            }

      - name: Protect triage label on pull request
        if: github.event_name == 'pull_request' && github.event.action == 'unlabeled' && github.event.label.name == 'triage'
        uses: actions/github-script@v7
        with:
          script: |
            try {
              // Get all labels on the pull request
              const { data: labels } = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number
              });
              
              // Check if any release or backport labels exist
              const hasReleaseLabel = labels.some(label => 
                label.name.startsWith('release '));
              const hasBackportLabel = labels.some(label => 
                label.name.startsWith('backport '));
              
              // If no release or backport labels, re-add triage label
              if (!hasReleaseLabel && !hasBackportLabel) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  labels: ['triage']
                });
                console.log('Re-added triage label to PR #' + 
                  context.issue.number + ' (no release/backport labels found)');
              } else {
                console.log('Triage label removal allowed for PR #' + 
                  context.issue.number + ' (release/backport labels present)');
              }
            } catch (error) {
              console.error('Error protecting triage label on PR:', error);
            }